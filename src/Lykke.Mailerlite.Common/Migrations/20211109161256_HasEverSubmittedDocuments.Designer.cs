// <auto-generated />
using System;
using Lykke.Mailerlite.Common.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Lykke.Mailerlite.Common.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211109161256_HasEverSubmittedDocuments")]
    partial class HasEverSubmittedDocuments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("lykke-mailerlite")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.HasSequence("id_generator_deposit_updates")
                .StartsAt(500000000L);

            modelBuilder.Entity("Lykke.Mailerlite.Common.Persistence.Customers.CustomerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("Deposited")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("HasEverSubmittedDocuments")
                        .HasColumnType("boolean");

                    b.Property<string>("KycState")
                        .HasColumnType("text");

                    b.Property<DateTime?>("KycStateTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Swisschain.Extensions.Idempotency.EfCore.IdGeneratorEntity", b =>
                {
                    b.Property<string>("IdempotencyId")
                        .HasColumnType("text");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("IdempotencyId");

                    b.ToTable("id_generator");
                });

            modelBuilder.Entity("Swisschain.Extensions.Idempotency.EfCore.OutboxEntity", b =>
                {
                    b.Property<string>("IdempotencyId")
                        .HasColumnType("text");

                    b.Property<string>("Commands")
                        .HasColumnType("text");

                    b.Property<string>("Events")
                        .HasColumnType("text");

                    b.Property<bool>("IsDispatched")
                        .HasColumnType("boolean");

                    b.Property<string>("Response")
                        .HasColumnType("text");

                    b.HasKey("IdempotencyId");

                    b.ToTable("outbox");
                });
#pragma warning restore 612, 618
        }
    }
}
